{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","divRoot","document","getElementById","reactDom","render"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAEQ,sBAAMC,SAfO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MASd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGMI,MAAMF,GAHZ,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKc,UAAU,+CAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAFO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAJyB,mBAC/BC,EAD+B,KACxBC,EADwB,KA8BtC,OAtBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CAELf,KAAMkB,EACNL,SAAS,MAId,UAKR,CAACpB,IAGGqB,EDvB0BM,CAAa3B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAQrB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,2CAGZ,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aExBxBiB,EAAe,WAAM,MAGM1C,mBAAS,CAAC,cAHhB,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAY9B,OAGI,qCAEA,2CAGA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAGQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAGDA,SAAUA,GAFJA,YCxBb8B,G,MAAUC,SAASC,eAAe,SAEzCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.5028f803.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setinputValue('')\r\n\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n\r\n\r\n        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fxOFUkQeXNggZ9vUr4BfzXZhudfDLUOp`\r\n    const respuesta =  await fetch(url);\r\n    const {data} = await respuesta.json();  \r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__backInRight \">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>loading...</p>}\r\n\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category  )\r\n        .then(imgs => {\r\n\r\n            setTimeout(() => {\r\n\r\n                setstate({\r\n    \r\n                    data: imgs,\r\n                    loading: false\r\n    \r\n                })\r\n                \r\n            }, 2000);\r\n\r\n        })\r\n\r\n\r\n    }, [category])\r\n\r\n  \r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One punch', 'Samurai X', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    // const handleAdd = () => {\r\n        \r\n    //     setCategories(  [...categories, 'HunterxHunter'] );\r\n\r\n    // }\r\n\r\n\r\n    return (\r\n        \r\n\r\n        <>\r\n\r\n        <h2>GifExpert</h2>\r\n        \r\n\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n\r\n        \r\n\r\n        <ol>\r\n            \r\n            { \r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n\r\n                   category={category}\r\n                   \r\n                   />\r\n                ))\r\n                   \r\n                \r\n            }\r\n            \r\n        </ol>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\n","import React from 'react';\nimport reactDom from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nimport reportWebVitals from './reportWebVitals';\n\n  \n    \n      const divRoot = document.getElementById('root')\n\n     reactDom.render(<GifExpertApp />, divRoot )\n\n\n//GifExpertApp\n// <h2>GifExpert</h2>\n// <hr />\n"],"sourceRoot":""}